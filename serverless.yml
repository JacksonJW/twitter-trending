service: twitter-trending
app: twitter-trending
org: jacksonjwatkins

custom:
  bucket: twitter-trending
  env: ${file(./${self:provider.stage}.env.json)}

provider:
  name: aws
  stage: ${opt:stage, 'dev'} #opt means reference CLI option value i.e. "--stage production"
  region: us-west-2
  runtime: nodejs12.x
  profile: twitter-trending
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:PutObjectAcl"
        - "s3:GetObject"
        - "s3:GetObjectAcl"
        - "s3:DeleteObject"
        - "s3:ListBucket"
        - "s3:ListAllMyBuckets"
      Resource: "arn:aws:s3:::${self:custom.bucket}*"
  environment:
    BUCKET: ${self:custom.bucket}
    TWITTER_CONSUMER_KEY: ${self:custom.env.TWITTER_CONSUMER_KEY}
    TWITTER_CONSUMER_SECRET: ${self:custom.env.TWITTER_CONSUMER_SECRET}
    TWITTER_ACCESS_TOKEN_KEY: ${self:custom.env.TWITTER_ACCESS_TOKEN_KEY}
    TWITTER_ACCESS_TOKEN_SECRET: ${self:custom.env.TWITTER_ACCESS_TOKEN_SECRET}
    TWILIO_ACCOUNT_SID: ${self:custom.env.TWILIO_ACCOUNT_SID}
    TWILIO_AUTH_TOKEN: ${self:custom.env.TWILIO_AUTH_TOKEN}

functions:
  fetchTrendsAndStoreInS3:
    handler: functions/fetchTrendsAndStoreInS3.fetchTrendsAndStoreInS3
    events:
      - http:
          path: fetchTrendsAndStoreInS3
          method: get
      - schedule: cron(0 */1 * * ? *) # every hour
  clearS3Bucket:
    handler: functions/clearS3Bucket.clearS3Bucket
    events:
      - http:
          path: clearS3Bucket
          method: get
      - schedule: cron(0 1 * * ? *) # at 1am every day
